- name: Ensure required directories exist
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop:
    - /etc/pacman.d/hooks/
    - /etc/X11/xorg.conf.d/
    - /usr/share/fonts/bryant-fonts/
    - /usr/share/kbd/keymaps/i386/dvorak/

- name: Import pacman hooks
  become: true
  ansible.builtin.copy:
    src: files/archlinux/update-software.hook
    dest: "/etc/pacman.d/hooks/update-software.hook"
    owner: root
    group: root
    mode: "0644"
    force: false

- name: Fix obinslab app image
  become: true
  ansible.builtin.copy:
    src: files/archlinux/obinslab.starter.rules
    dest: "/etc/udev/rules.d/obinskit-kdb.rules"
    owner: root
    group: root
    mode: "0644"
    force: false

- name: Import vconsole custom keyboard (engish)
  become: true
  ansible.builtin.copy:
    src: files/archlinux/xkb/bryant-dvorak.map
    dest: "/usr/share/kbd/keymaps/i386/dvorak/bryant-dvorak.map"
    owner: root
    group: root
    mode: "0644"
    force: false

- name: Import system custom keyboard (english)
  become: true
  ansible.builtin.copy:
    src: files/archlinux/xkb/bryant-dvorak
    dest: "/usr/share/X11/xkb/symbols/bryant-dvorak"
    owner: root
    group: root
    mode: "0644"
    force: false

- name: Import system custom keyboard (spanish)
  become: true
  ansible.builtin.copy:
    src: files/archlinux/xkb/bryant-dvorak-itl
    dest: "/usr/share/X11/xkb/symbols/bryant-dvorak-itl"
    owner: root
    group: root
    mode: "0644"
    force: false

- name: Import system custom configuration (spanish)
  become: true
  ansible.builtin.copy:
    src: files/archlinux/etc/00-keyboard.conf
    dest: "/etc/X11/xorg.conf.d/00-keyboard.conf"
    mode: "0644"
    force: true

- name: Import vconsole custom keyboard configuration (spanish)
  become: true
  ansible.builtin.copy:
    src: files/archlinux/etc/vconsole.conf
    dest: "/etc/vconsole.conf"
    mode: "0644"
    force: true

- name: Ensure GRUB_DEFAULT is set to 'SAVE'
  become: true
  ansible.builtin.lineinfile:
    name: /etc/default/grub
    regexp: "^GRUB_DEFAULT=0"
    line: "GRUB_DEFAULT=SAVE"
    create: true
    backup: true
    owner: root
    group: root
    mode: "0644"

- name: Ensure GRUB_SAVE_DEFAULT is set to 'true'
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: "^#GRUB_SAVEDEFAULT=true"
    line: "GRUB_SAVE_DEFAULT=true"
    create: true
    backup: true
    owner: root
    group: root
    mode: "0644"

- name: Ensure GRUB_DISABLE_SUBMENU is set to 'y'
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/default/grub
    regexp: "^#GRUB_DISABLE_SUBMENU=y"
    line: "GRUB_DISABLE_SUBMENU=y"
    create: true
    backup: true
    owner: root
    group: root
    mode: "0644"

- name: Ensure ParallelDownloads is set to '5'
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/pacman.conf
    regexp: "^#ParallelDownloads = 5"
    line: "ParallelDownloads = 5"
    create: true
    backup: true
    owner: root
    group: root
    mode: "0644"

- name: Regenerate GRUB configuration
  become: true
  ansible.builtin.command:
    cmd: grub-mkconfig -o /boot/grub/grub.cfg
  register: done
  changed_when: done.rc != 0

- name: Import custom personal fonts
  become: true
  ansible.builtin.copy:
    src: files/archlinux/fonts
    dest: "/usr/share/fonts/bryant-fonts"
    owner: root
    group: root
    mode: "0644"
    creates: "/usr/share/fonts/bryant-fonts/fonts/README.md"
    force: false

- name: Refresh fonts cache
  become: true
  ansible.builtin.command:
    cmd: sudo fc-cache -f -v
  register: fontcache
  changed_when: fontcache.rc != 0

- name: Enable and start systemd-resolved service
  ansible.builtin.systemd:
    name: systemd-resolved.service
    enabled: true
    state: started

- name: Enable and start cronie service
  ansible.builtin.systemd:
    name: cronie.service
    enabled: true
    state: started

- name: Enable mpd for current user
  ansible.builtin.systemd:
    name: mpd.service
    state: started
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ myuid }}"

- name: Enable and start syncthing service
  ansible.builtin.systemd:
    name: syncthing@{{ host_user }}.service
    enabled: true
    state: started

- name: Enable and start docker service
  ansible.builtin.systemd:
    name: docker.service
    enabled: true
    state: started

- name: Just force systemd to reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Just force systemd to re-execute itself
  ansible.builtin.systemd_service:
    daemon_reexec: true
